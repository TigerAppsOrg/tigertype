.typing-area {
  position: relative;
  inset: 0px;
  min-height: 5rem;
  flex-direction: column;
}

.stats-container {
  position: relative;
  min-height: 0;
  margin-bottom: 1rem;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: var(--container-color);
  width: 100%;
  margin-left: auto;
  margin-right: auto;
  padding: 0 10px;
  box-sizing: border-box;
}

.stats {
  display: flex;
  justify-content: center;
  gap: 2rem;
  background-color: var(--type-container-color);
  padding: 0.8rem 1.5rem;
  border-radius: 8px;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.15);
  border: 1px solid rgba(245, 128, 37, 0.1);
  flex-grow: 1;
  min-width: 0;
  text-align: center;
  position: relative; /* host for inline chips */
}

/* Empty placeholder for race stats */
.race-placeholder {
  height: 60px;
  background-color: transparent;
  border: none;
  box-shadow: none;
}

/* Countdown inside stats container */
.countdown-stats {
  justify-content: center;
  padding: 0.5rem 1.5rem;
}

.countdown-item {
  display: flex;
  justify-content: center;
  align-items: center;
}

.countdown-value {
  font-size: 2.5rem;
  font-weight: bold;
  color: #FF6B00;
  text-shadow: 0 2px 10px rgba(255, 107, 0, 0.3);
  animation: pulse 1s infinite;
}

/* Tips inside stats container */
.tips-stats {
  justify-content: center;
  padding: 0.8rem 1.5rem;
}

.tip-item {
  text-align: center;
  display: flex;
  justify-content: center;
  align-items: center;
}

.tip-text {
  font-style: italic;
  color: var(--princeton-orange);
  font-weight: lighter;
  transform: skewX(-10deg); /* manually making italics since css font-style isn't working idk why*/
}

/* Tip visibility states */
.tip-visible {
  opacity: 0.8;
  transition: opacity 0.5s ease;
}

.tip-hidden {
  opacity: 0;
  transition: opacity 0.5s ease;
}

/* Static pulsing for visible tips */
.tip-pulsing {
  animation: tipPulseShadow 2.5s ease-in-out infinite;
}

@keyframes tipPulseShadow {
  0% { text-shadow: 0 0 1px rgba(245, 128, 37, 0.0); }
  50% { text-shadow: 0 0 5px rgba(245, 128, 37, 0.8); }
  100% { text-shadow: 0 0 1px rgba(245, 128, 37, 0.0); }
}

@keyframes fadeInOut {
  0% { opacity: 0.5; }
  50% { opacity: 1.0; }
  100% { opacity: 0.5; }
}

.stat-item {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.tool-tip {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.stat-label {
  font-size: 0.8rem;
  color: #aaa;
  margin-bottom: 0.2rem;
  min-width: 4ch; 
  text-align: center; 
  display: inline-block;
}

.stat-value {
  font-size: 1.2rem;
  font-weight: bold;
  color: #F58025;
}

.snippet-display {
  background-color: var(--type-container-color);
  padding: 1rem;
  border-radius: 8px;
  font-size: var(--snippet-font-size, 18px);
  line-height: 1.8;
  white-space: pre-wrap;
  position: relative;
  min-height: 10vh;
  max-height: 25vh;
  overflow-y: auto;
  overflow-x: hidden;
  letter-spacing: 1px;
  border-left: 4px solid #F58025;
  margin-bottom: 1rem;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
  border: 1px solid rgba(245, 128, 37, 0.1);
  color: rgba(255, 255, 255, 0.325);
  text-align: justify;
  scroll-behavior: smooth;
  /* Hide scrollbar for Firefox */
  scrollbar-width: none;
  /* Hide scrollbar for IE and Edge */
  -ms-overflow-style: none;
}

/* Hide scrollbar for Chrome, Safari and Opera */
.snippet-display::-webkit-scrollbar {
  display: none;
}

.snippet-display span {
  color: var(--typing-color);
}

.typing-input-container {
  position: fixed;
  inset: 0px;
  z-index: -1000;
}

.typing-input-container input {
  width: 100%;
  padding: 1rem;
  border: none;
  border-radius: 8px;
  color: white;
}

.progress-container {
  margin-top: 2rem;
  display: flex;
  flex-direction: column;
  gap: 0.8rem;
}

.progress-bar {
  height: 30px;
  background-color: #1e1e1e;
  border-radius: 15px;
  overflow: hidden;
  position: relative;
  box-shadow: inset 0 2px 5px rgba(0, 0, 0, 0.2);
}

.progress-fill {
  height: 100%;
  background-color: #F58025;
  border-radius: 15px;
  transition: width 0.3s ease-out;
}

.progress-label {
  position: absolute;
  right: 10px;
  top: 5px;
  color: white;
  font-weight: bold;
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.5);
}

.correct {
  color: var(--correct-bg-color)!important;
}

.incorrect {
  color: var(--incorrect-color)!important;
  background-color: var(--incorrect-bg-color)!important;
  position: relative;
}

/* Visual indicator for incorrectly typed characters - solid underline */
.snippet-display .incorrect::after {
  content: '';
  position: absolute;
  left: 0;
  right: 0;
  bottom: 0;
  height: 2.5px;
  background-color: var(--incorrect-color);
  opacity: 0.9;
  border-radius: 1px;
  pointer-events: none;
}

/* Caret cursor: remove red background, keep solid underline */
:root[data-cursor='caret'] .snippet-display .incorrect {
  background-color: transparent !important;
}

.shake-animation {
  animation: shake 0.4s cubic-bezier(.36,.07,.19,.97) both;
}

@keyframes shake {
  0%, 100% { transform: translateX(0); }
  10%, 30%, 50%, 70%, 90% { transform: translateX(-1px); }
  20%, 40%, 60%, 80% { transform: translateX(1px); }
}

.error-message {
  display: block;
  text-align: center;
  margin: 0.5rem auto 0;
  width: fit-content;
  max-width: 90%;
  background-color: rgba(255, 65, 47, 0.85);
  color: white;
  padding: 6px 12px;
  border-radius: 5px;
  font-size: 0.9rem;
  font-weight: bold;
  pointer-events: none;
  animation: errorFadeInOut 0.75s forwards;
  box-shadow: 0 2px 8px rgba(255, 65, 47, 0.4);
}

/* Caps Lock Warning styles */
/* Caps Lock warning â€”  banner above snippet */
.caps-lock-warning {
  position: absolute;
  top: 50%;
  left: 12px;
  transform: translate(-6px, -50%);
  background: linear-gradient(180deg, rgba(255, 202, 80, 0.98), rgba(245, 181, 48, 0.98));
  color: #1f1f1f;
  padding: 6px 12px;
  border-radius: 10px;
  font-size: 0.85rem;
  font-weight: 700;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 6px;
  font-family: var(--main-font);
  user-select: none;
  pointer-events: none;
  /* Neon amber ish glow */
  box-shadow:
    0 2px 8px rgba(0, 0, 0, 0.25),
    0 0 10px rgba(255, 202, 80, 0.5),
    0 0 18px rgba(245, 181, 48, 0.25);
  opacity: 0;
  animation: capsIn 220ms ease-out forwards, warningPulse 2.5s ease-in-out infinite 300ms;
  min-width: 9.5rem;
}

.caps-lock-icon {
  margin-right: 0;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  font-size: 1rem;
}

.caps-lock-icon svg {
  stroke: currentColor;
}

@keyframes warningPulse {
  0%, 100% { opacity: 0.95; }
  50% { opacity: 1; }
}

@keyframes capsIn {
  from { opacity: 0; transform: translate(-14px, -50%) scale(0.98); }
  to   { opacity: 1; transform: translate(0, -50%) scale(1); }
}

@keyframes errorFadeInOut {
  0% { opacity: 0; margin-top: 0; }
  10% { opacity: 1; margin-top: 0.5rem; }
  90% { opacity: 1; margin-top: 0.5rem; }
  100% { opacity: 0; margin-top: 0; }
}

/* The next-to-type character */
.current {
  position: relative;
  background-color: var(--default-cursor);
  border-radius: 2px;
  color: var(--current-color)!important;
  animation: blink 1s infinite;
}

:root[data-cursor='caret'] .snippet-display .current {
  background-color: transparent !important;
  color: inherit !important;
  font-weight: inherit;
  animation: none !important;
  text-shadow: none;
  transition: color 120ms ease;
}

:root[data-cursor='caret'] .snippet-display .current.error {
  color: var(--error-color);
  text-shadow: none;
}

:root[data-cursor='caret'][data-caret-blink='blink'] .snippet-display .current::before {
  animation: caretBlink 1.2s ease-in-out infinite;
}

:root[data-cursor='caret'][data-caret-blink='solid'] .snippet-display .current::before {
  animation: none !important;
  opacity: 1;
}

/* Default caret rendering (line cursor) when block cursor is disabled */
.current::before {
  visibility: var(--line-cursor);
  position: absolute;
  content: "";
  left: 0;
  top: 0;
  width: var(--caret-width, 3px);
  height: 100%;
  background: var(--caret-color)!important;
}

/* Animation for smooth line-cursor */
@keyframes slide {
  from { right: 100%; }
  to   { right: 50%; }
}

@keyframes blink {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.7; }
}

/* Smooth caret blink (independent of letter blink) */
@keyframes caretBlink {
  0%   { opacity: 1; }
  50%  { opacity: 0.35; }
  100% { opacity: 1; }
}

/*
  Smooth glide overlay cursor
  - Renders an absolutely-positioned overlay that we move via transform
  - In glide mode, we hide the background on .current and the ::before caret
*/
.glide-on .current {
  background-color: transparent !important; /* background from overlay */
  color: var(--current-color) !important;   /* keep white highlight */
  animation: blink 1s infinite !important;
}

.glide-on .current::before {
  display: none !important;
}

:root[data-cursor='caret'] .snippet-display.glide-on .current {
  color: inherit !important;
  background-color: transparent !important;
  animation: none !important;
}

:root[data-cursor='caret'] .snippet-display.glide-on .current::before {
  display: none !important;
}

.snippet-display {
  position: relative;
}

.cursor-overlay {
  position: absolute;
  top: 0;
  left: 0;
  transform: translate(0, 0);
  will-change: transform;
  pointer-events: none;
  z-index: 0; /* behind the text */
  transition:
    transform var(--cursor-glide-duration, 90ms) ease-in-out,
    width     var(--cursor-glide-duration, 90ms) ease-in-out,
    height    var(--cursor-glide-duration, 90ms) ease-in-out;
  opacity: calc(var(--glide-cursor-enabled, 0)); /* 0 or 1 set by Settings */
  border-radius: 2px;
  backface-visibility: hidden;
}

.cursor-overlay.block {
  background-color: var(--default-cursor);
  z-index: 0;
}

.cursor-overlay.caret {
  background: transparent;
  border-left: var(--caret-width, 2px) solid var(--caret-color);
  z-index: 2; /* above text so thin caret remains visible */
  animation: caretBlink 1.2s ease-in-out infinite;
}
:root[data-cursor='caret'][data-caret-blink='solid'] .cursor-overlay.caret {
  animation: none !important;
  opacity: 1 !important;
}
.cursor-overlay.caret.typing-active {
  animation: none !important;
  opacity: 1 !important;
}

.snippet-display.caret-solid .cursor-overlay.caret {
  animation: none !important;
  opacity: 1 !important;
}

.snippet-display.caret-solid .current,
.snippet-display.caret-solid .current::before {
  animation: none !important;
  opacity: 1 !important;
}

.snippet-display.caret-solid .current::before {
  background: var(--caret-color) !important;
}

/* Non-glide caret (pseudo) also blinks smoothly */
.current::before {
  animation: caretBlink 1.2s ease-in-out infinite;
}

/* Avoid smooth container scroll while gliding to prevent desync */
.glide-on.snippet-display {
  scroll-behavior: auto;
}

/* Practice mode tooltip */
.practice-tooltip {
  display: flex;
  justify-content: center;
  margin-top: 0.5rem;
}

.tooltip-content {
  background-color: rgba(30, 30, 30, 0.8);
  border-radius: 20px;
  padding: 0.5rem 1rem;
  font-size: 0.9rem;
  color: #aaa;
  backdrop-filter: blur(5px);
  border: 1px solid rgba(245, 128, 37, 0.2);
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);
  display: inline-block;
  opacity: 0.8;
  transition: opacity 0.2s ease;
}

.tooltip-content:hover {
  opacity: 1;
}

.tooltip-content kbd {
  background-color: #2a2a2a;
  border-radius: 3px;
  border: 1px solid #444;
  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.2);
  color: #F58025;
  display: inline-block;
  font-family: 'Fira Code', monospace;
  font-size: 0.85rem;
  font-weight: 500;
  line-height: 1;
  padding: 2px 5px;
  margin: 0 3px;
}

/* Responsive styles */
@media (max-width: 768px) {
  .snippet-display {
    font-size: calc(var(--snippet-font-size, 18px) * 0.85);
    padding: 1.5rem;
  }

  .typing-input-container input {
    font-size: 1rem;
    padding: 0.8rem;
  }

  .stats {
    padding: 0.6rem 1rem;
    gap: 1.5rem;
  }
}

/* Tips pulsing animation */
@keyframes pulse {
  0% { transform: scale(1); opacity: 1; }
  50% { transform: scale(1.1); opacity: 0.5; }
  100% { transform: scale(1); opacity: 1; }
}

.test-mode-indicator {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 8px;
  padding: 4px 10px;
  border-radius: 15px;
  font-size: 0.9rem;
  font-weight: 500;
  margin-bottom: 8px;
  width: fit-content;
  margin-left: auto;
  margin-right: auto;
}

.test-mode-indicator.timed-mode {
  background-color: var(--primary-color-transparent, rgba(255, 153, 0, 0.1));
  color: var(--primary-color, #ff9900);
  border: 1px solid var(--primary-color-light, rgba(255, 153, 0, 0.3));
}

.test-mode-indicator .mode-label {
  display: inline-block;
}

.test-mode-indicator .mode-duration {
  font-weight: 600;
}
